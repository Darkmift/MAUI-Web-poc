//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLogged", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class UserLogged : object
    {
        
        private long IDField;
        
        private string NameField;
        
        private string PasswordField;
        
        private string TypeField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AdminsRec", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class AdminsRec : ServiceReference1.AbsRec
    {
        
        private long IDField;
        
        private string MailField;
        
        private string NameField;
        
        private string PhoneField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail
        {
            get
            {
                return this.MailField;
            }
            set
            {
                this.MailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return this.PhoneField;
            }
            set
            {
                this.PhoneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbsRec", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.PasswordsRec))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.DrugsRec))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.DrugTypesRec))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.UsersRec))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.UsersDrugsRec))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ServiceReference1.AdminsRec))]
    public partial class AbsRec : object
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordsRec", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class PasswordsRec : ServiceReference1.AbsRec
    {
        
        private string PasswordField;
        
        private string TypeField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrugsRec", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class DrugsRec : ServiceReference1.AbsRec
    {
        
        private string CodeField;
        
        private string DrugTypeField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrugType
        {
            get
            {
                return this.DrugTypeField;
            }
            set
            {
                this.DrugTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrugTypesRec", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class DrugTypesRec : ServiceReference1.AbsRec
    {
        
        private string CodeField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code
        {
            get
            {
                return this.CodeField;
            }
            set
            {
                this.CodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersRec", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class UsersRec : ServiceReference1.AbsRec
    {
        
        private string AddressField;
        
        private string BloodTypeField;
        
        private int HeightField;
        
        private long IDField;
        
        private string MailField;
        
        private string NameField;
        
        private string PhoneField;
        
        private string UsernameField;
        
        private int WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BloodType
        {
            get
            {
                return this.BloodTypeField;
            }
            set
            {
                this.BloodTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height
        {
            get
            {
                return this.HeightField;
            }
            set
            {
                this.HeightField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mail
        {
            get
            {
                return this.MailField;
            }
            set
            {
                this.MailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone
        {
            get
            {
                return this.PhoneField;
            }
            set
            {
                this.PhoneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username
        {
            get
            {
                return this.UsernameField;
            }
            set
            {
                this.UsernameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight
        {
            get
            {
                return this.WeightField;
            }
            set
            {
                this.WeightField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersDrugsRec", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class UsersDrugsRec : ServiceReference1.AbsRec
    {
        
        private string DrugCodeField;
        
        private int FrequentField;
        
        private int QuantityField;
        
        private System.DateTime TimeField;
        
        private long UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DrugCode
        {
            get
            {
                return this.DrugCodeField;
            }
            set
            {
                this.DrugCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Frequent
        {
            get
            {
                return this.FrequentField;
            }
            set
            {
                this.FrequentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity
        {
            get
            {
                return this.QuantityField;
            }
            set
            {
                this.QuantityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time
        {
            get
            {
                return this.TimeField;
            }
            set
            {
                this.TimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UserID
        {
            get
            {
                return this.UserIDField;
            }
            set
            {
                this.UserIDField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Message", ReplyAction="http://tempuri.org/IService1/MessageResponse")]
        System.Threading.Tasks.Task<string> MessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminType", ReplyAction="http://tempuri.org/IService1/AdminTypeResponse")]
        System.Threading.Tasks.Task<string> AdminTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UserType", ReplyAction="http://tempuri.org/IService1/UserTypeResponse")]
        System.Threading.Tasks.Task<string> UserTypeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/doSelect", ReplyAction="http://tempuri.org/IService1/doSelectResponse")]
        System.Threading.Tasks.Task<string> doSelectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/doInsert", ReplyAction="http://tempuri.org/IService1/doInsertResponse")]
        System.Threading.Tasks.Task<string> doInsertAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/doUpdate", ReplyAction="http://tempuri.org/IService1/doUpdateResponse")]
        System.Threading.Tasks.Task<string> doUpdateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/doDelete", ReplyAction="http://tempuri.org/IService1/doDeleteResponse")]
        System.Threading.Tasks.Task<string> doDeleteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<ServiceReference1.UserLogged> LoginAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminsSelectAll", ReplyAction="http://tempuri.org/IService1/AdminsSelectAllResponse")]
        System.Threading.Tasks.Task<ServiceReference1.AdminsRec[]> AdminsSelectAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminsSelect", ReplyAction="http://tempuri.org/IService1/AdminsSelectResponse")]
        System.Threading.Tasks.Task<ServiceReference1.AdminsRec> AdminsSelectAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminsInsert", ReplyAction="http://tempuri.org/IService1/AdminsInsertResponse")]
        System.Threading.Tasks.Task<bool> AdminsInsertAsync(ServiceReference1.AdminsRec admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminsUpdate", ReplyAction="http://tempuri.org/IService1/AdminsUpdateResponse")]
        System.Threading.Tasks.Task<bool> AdminsUpdateAsync(ServiceReference1.AdminsRec admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminsDelete", ReplyAction="http://tempuri.org/IService1/AdminsDeleteResponse")]
        System.Threading.Tasks.Task<bool> AdminsDeleteAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminsInsertWithPassword", ReplyAction="http://tempuri.org/IService1/AdminsInsertWithPasswordResponse")]
        System.Threading.Tasks.Task<ServiceReference1.UserLogged> AdminsInsertWithPasswordAsync(ServiceReference1.AdminsRec admin, ServiceReference1.PasswordsRec password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrugsSelectAll", ReplyAction="http://tempuri.org/IService1/DrugsSelectAllResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DrugsRec[]> DrugsSelectAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrugsSelect", ReplyAction="http://tempuri.org/IService1/DrugsSelectResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DrugsRec> DrugsSelectAsync(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrugsInsert", ReplyAction="http://tempuri.org/IService1/DrugsInsertResponse")]
        System.Threading.Tasks.Task<bool> DrugsInsertAsync(ServiceReference1.DrugsRec drug);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrugsUpdate", ReplyAction="http://tempuri.org/IService1/DrugsUpdateResponse")]
        System.Threading.Tasks.Task<bool> DrugsUpdateAsync(ServiceReference1.AdminsRec drug);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrugsDelete", ReplyAction="http://tempuri.org/IService1/DrugsDeleteResponse")]
        System.Threading.Tasks.Task<bool> DrugsDeleteAsync(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrugTypesSelectAll", ReplyAction="http://tempuri.org/IService1/DrugTypesSelectAllResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DrugTypesRec[]> DrugTypesSelectAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrugTypesSelect", ReplyAction="http://tempuri.org/IService1/DrugTypesSelectResponse")]
        System.Threading.Tasks.Task<ServiceReference1.DrugTypesRec> DrugTypesSelectAsync(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrugTypesInsert", ReplyAction="http://tempuri.org/IService1/DrugTypesInsertResponse")]
        System.Threading.Tasks.Task<bool> DrugTypesInsertAsync(ServiceReference1.DrugTypesRec drugtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrugTypesUpdate", ReplyAction="http://tempuri.org/IService1/DrugTypesUpdateResponse")]
        System.Threading.Tasks.Task<bool> DrugTypesUpdateAsync(ServiceReference1.DrugTypesRec drugtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DrugTypesDelete", ReplyAction="http://tempuri.org/IService1/DrugTypesDeleteResponse")]
        System.Threading.Tasks.Task<bool> DrugTypesDeleteAsync(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersSelectAll", ReplyAction="http://tempuri.org/IService1/UsersSelectAllResponse")]
        System.Threading.Tasks.Task<ServiceReference1.UsersRec[]> UsersSelectAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersSelect", ReplyAction="http://tempuri.org/IService1/UsersSelectResponse")]
        System.Threading.Tasks.Task<ServiceReference1.UsersRec> UsersSelectAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersInsert", ReplyAction="http://tempuri.org/IService1/UsersInsertResponse")]
        System.Threading.Tasks.Task<bool> UsersInsertAsync(ServiceReference1.UsersRec user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersUpdate", ReplyAction="http://tempuri.org/IService1/UsersUpdateResponse")]
        System.Threading.Tasks.Task<bool> UsersUpdateAsync(ServiceReference1.UsersRec user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersDelete", ReplyAction="http://tempuri.org/IService1/UsersDeleteResponse")]
        System.Threading.Tasks.Task<bool> UsersDeleteAsync(long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersInsertWithPassword", ReplyAction="http://tempuri.org/IService1/UsersInsertWithPasswordResponse")]
        System.Threading.Tasks.Task<ServiceReference1.UserLogged> UsersInsertWithPasswordAsync(ServiceReference1.UsersRec user, ServiceReference1.PasswordsRec password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PasswordsSelectAll", ReplyAction="http://tempuri.org/IService1/PasswordsSelectAllResponse")]
        System.Threading.Tasks.Task<ServiceReference1.PasswordsRec[]> PasswordsSelectAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PasswordsSelect", ReplyAction="http://tempuri.org/IService1/PasswordsSelectResponse")]
        System.Threading.Tasks.Task<ServiceReference1.PasswordsRec> PasswordsSelectAsync(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PasswordsInsert", ReplyAction="http://tempuri.org/IService1/PasswordsInsertResponse")]
        System.Threading.Tasks.Task<bool> PasswordsInsertAsync(ServiceReference1.PasswordsRec password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PasswordsUpdate", ReplyAction="http://tempuri.org/IService1/PasswordsUpdateResponse")]
        System.Threading.Tasks.Task<bool> PasswordsUpdateAsync(ServiceReference1.PasswordsRec password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PasswordsDelete", ReplyAction="http://tempuri.org/IService1/PasswordsDeleteResponse")]
        System.Threading.Tasks.Task<bool> PasswordsDeleteAsync(string Username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersDrugsSelectAll", ReplyAction="http://tempuri.org/IService1/UsersDrugsSelectAllResponse")]
        System.Threading.Tasks.Task<ServiceReference1.UsersDrugsRec[]> UsersDrugsSelectAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersDrugsSelect", ReplyAction="http://tempuri.org/IService1/UsersDrugsSelectResponse")]
        System.Threading.Tasks.Task<ServiceReference1.UsersDrugsRec> UsersDrugsSelectAsync(int UserID, string DrugCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersDrugsInsert", ReplyAction="http://tempuri.org/IService1/UsersDrugsInsertResponse")]
        System.Threading.Tasks.Task<bool> UsersDrugsInsertAsync(ServiceReference1.UsersDrugsRec userdrug);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersDrugsUpdate", ReplyAction="http://tempuri.org/IService1/UsersDrugsUpdateResponse")]
        System.Threading.Tasks.Task<bool> UsersDrugsUpdateAsync(ServiceReference1.UsersDrugsRec userdrug);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UsersDrugsDelete", ReplyAction="http://tempuri.org/IService1/UsersDrugsDeleteResponse")]
        System.Threading.Tasks.Task<bool> UsersDrugsDeleteAsync(int UserID, string DrugCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IService1Channel : ServiceReference1.IService1, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ServiceReference1.IService1>, ServiceReference1.IService1
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public Service1Client() : 
                base(Service1Client.GetDefaultBinding(), Service1Client.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IService1.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), Service1Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(Service1Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> MessageAsync()
        {
            return base.Channel.MessageAsync();
        }
        
        public System.Threading.Tasks.Task<string> AdminTypeAsync()
        {
            return base.Channel.AdminTypeAsync();
        }
        
        public System.Threading.Tasks.Task<string> UserTypeAsync()
        {
            return base.Channel.UserTypeAsync();
        }
        
        public System.Threading.Tasks.Task<string> doSelectAsync()
        {
            return base.Channel.doSelectAsync();
        }
        
        public System.Threading.Tasks.Task<string> doInsertAsync()
        {
            return base.Channel.doInsertAsync();
        }
        
        public System.Threading.Tasks.Task<string> doUpdateAsync()
        {
            return base.Channel.doUpdateAsync();
        }
        
        public System.Threading.Tasks.Task<string> doDeleteAsync()
        {
            return base.Channel.doDeleteAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.UserLogged> LoginAsync(string Username, string Password)
        {
            return base.Channel.LoginAsync(Username, Password);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.AdminsRec[]> AdminsSelectAllAsync()
        {
            return base.Channel.AdminsSelectAllAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.AdminsRec> AdminsSelectAsync(long id)
        {
            return base.Channel.AdminsSelectAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> AdminsInsertAsync(ServiceReference1.AdminsRec admin)
        {
            return base.Channel.AdminsInsertAsync(admin);
        }
        
        public System.Threading.Tasks.Task<bool> AdminsUpdateAsync(ServiceReference1.AdminsRec admin)
        {
            return base.Channel.AdminsUpdateAsync(admin);
        }
        
        public System.Threading.Tasks.Task<bool> AdminsDeleteAsync(long id)
        {
            return base.Channel.AdminsDeleteAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.UserLogged> AdminsInsertWithPasswordAsync(ServiceReference1.AdminsRec admin, ServiceReference1.PasswordsRec password)
        {
            return base.Channel.AdminsInsertWithPasswordAsync(admin, password);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DrugsRec[]> DrugsSelectAllAsync()
        {
            return base.Channel.DrugsSelectAllAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DrugsRec> DrugsSelectAsync(string Code)
        {
            return base.Channel.DrugsSelectAsync(Code);
        }
        
        public System.Threading.Tasks.Task<bool> DrugsInsertAsync(ServiceReference1.DrugsRec drug)
        {
            return base.Channel.DrugsInsertAsync(drug);
        }
        
        public System.Threading.Tasks.Task<bool> DrugsUpdateAsync(ServiceReference1.AdminsRec drug)
        {
            return base.Channel.DrugsUpdateAsync(drug);
        }
        
        public System.Threading.Tasks.Task<bool> DrugsDeleteAsync(string Code)
        {
            return base.Channel.DrugsDeleteAsync(Code);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DrugTypesRec[]> DrugTypesSelectAllAsync()
        {
            return base.Channel.DrugTypesSelectAllAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.DrugTypesRec> DrugTypesSelectAsync(string Code)
        {
            return base.Channel.DrugTypesSelectAsync(Code);
        }
        
        public System.Threading.Tasks.Task<bool> DrugTypesInsertAsync(ServiceReference1.DrugTypesRec drugtype)
        {
            return base.Channel.DrugTypesInsertAsync(drugtype);
        }
        
        public System.Threading.Tasks.Task<bool> DrugTypesUpdateAsync(ServiceReference1.DrugTypesRec drugtype)
        {
            return base.Channel.DrugTypesUpdateAsync(drugtype);
        }
        
        public System.Threading.Tasks.Task<bool> DrugTypesDeleteAsync(string Code)
        {
            return base.Channel.DrugTypesDeleteAsync(Code);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.UsersRec[]> UsersSelectAllAsync()
        {
            return base.Channel.UsersSelectAllAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.UsersRec> UsersSelectAsync(long ID)
        {
            return base.Channel.UsersSelectAsync(ID);
        }
        
        public System.Threading.Tasks.Task<bool> UsersInsertAsync(ServiceReference1.UsersRec user)
        {
            return base.Channel.UsersInsertAsync(user);
        }
        
        public System.Threading.Tasks.Task<bool> UsersUpdateAsync(ServiceReference1.UsersRec user)
        {
            return base.Channel.UsersUpdateAsync(user);
        }
        
        public System.Threading.Tasks.Task<bool> UsersDeleteAsync(long ID)
        {
            return base.Channel.UsersDeleteAsync(ID);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.UserLogged> UsersInsertWithPasswordAsync(ServiceReference1.UsersRec user, ServiceReference1.PasswordsRec password)
        {
            return base.Channel.UsersInsertWithPasswordAsync(user, password);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PasswordsRec[]> PasswordsSelectAllAsync()
        {
            return base.Channel.PasswordsSelectAllAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.PasswordsRec> PasswordsSelectAsync(string Username)
        {
            return base.Channel.PasswordsSelectAsync(Username);
        }
        
        public System.Threading.Tasks.Task<bool> PasswordsInsertAsync(ServiceReference1.PasswordsRec password)
        {
            return base.Channel.PasswordsInsertAsync(password);
        }
        
        public System.Threading.Tasks.Task<bool> PasswordsUpdateAsync(ServiceReference1.PasswordsRec password)
        {
            return base.Channel.PasswordsUpdateAsync(password);
        }
        
        public System.Threading.Tasks.Task<bool> PasswordsDeleteAsync(string Username)
        {
            return base.Channel.PasswordsDeleteAsync(Username);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.UsersDrugsRec[]> UsersDrugsSelectAllAsync()
        {
            return base.Channel.UsersDrugsSelectAllAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.UsersDrugsRec> UsersDrugsSelectAsync(int UserID, string DrugCode)
        {
            return base.Channel.UsersDrugsSelectAsync(UserID, DrugCode);
        }
        
        public System.Threading.Tasks.Task<bool> UsersDrugsInsertAsync(ServiceReference1.UsersDrugsRec userdrug)
        {
            return base.Channel.UsersDrugsInsertAsync(userdrug);
        }
        
        public System.Threading.Tasks.Task<bool> UsersDrugsUpdateAsync(ServiceReference1.UsersDrugsRec userdrug)
        {
            return base.Channel.UsersDrugsUpdateAsync(userdrug);
        }
        
        public System.Threading.Tasks.Task<bool> UsersDrugsDeleteAsync(int UserID, string DrugCode)
        {
            return base.Channel.UsersDrugsDeleteAsync(UserID, DrugCode);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IService1))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/DBService/Service1/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return Service1Client.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return Service1Client.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IService1);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IService1,
        }
    }
}
